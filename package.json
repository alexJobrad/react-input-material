{
  "name": "react-input-material",
  "version": "0.0.73",
  "license": "CC-BY-3.0",
  "description": "Reusable material design based input field with support for (richt-)text, code, selections, numbers, dates and so on.",
  "homepage": "https://torben.website/react-input-material",
  "documentationWebsite": {
    "languages": [
      "deDE",
      "enUS"
    ],
    "tagline": "Do not refactor input fields anymore.<!--deDE:Nie wieder Eingabefelder anpassen.-->",
    "trackingCode": "TODO"
  },
  "keywords": [
    "input",
    "text",
    "rich-text",
    "number-input",
    "form-field"
  ],
  "files": [
    "components",
    "helper.js",
    "helper.ts",
    "index.styles.css",
    "index.tsx",
    "material-fixes.css",
    "material-fixes.styles.css",
    "type.ts"
  ],
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/react-input-material"
  },
  "scripts": {
    "build": "weboptimizer build",
    "build:export": "weboptimizer build '{__reference__: \"target:export\"}'",
    "check": "yarn check:types; yarn lint",
    "check:types": "weboptimizer check:types",
    "clear": "weboptimizer clear && (rm *.styles.css components/*.styles.css 2>/dev/null || true)",
    "document": "weboptimizer document",
    "lint": "weboptimizer lint",
    "prepare": "yarn build",
    "report:coverage": "nyc report --reporter=text-lcov | coveralls",
    "serve": "weboptimizer serve",
    "serve:minimal": "weboptimizer serve '{__reference__: \"target:minimal\"}'",
    "start": "yarn serve",
    "test": "weboptimizer test",
    "test:browser": "weboptimizer test:browser",
    "update": "yarn version --patch && yarn publish",
    "update:documentation": "documentationWebsite --log-level info",
    "watch": "weboptimizer build --watch"
  },
  "devDependencies": {
    "@babel/plugin-transform-proto-to-assign": "*",
    "@babel/preset-react": "*",
    "@rmwc/card": "*",
    "@rmwc/checkbox": "*",
    "@rmwc/circular-progress": "*",
    "@rmwc/formfield": "*",
    "@rmwc/icon": "*",
    "@rmwc/icon-button": "*",
    "@rmwc/select": "*",
    "@rmwc/textfield": "*",
    "@rmwc/theme": "*",
    "@rmwc/tooltip": "*",
    "@rmwc/typography": "*",
    "@teamsupercell/typings-for-css-modules-loader": "*",
    "@tinymce/tinymce-react": "*",
    "@types/ejs": "*",
    "@types/html-minifier": "*",
    "@types/jest": "*",
    "@types/jquery": "*",
    "@types/jsdom": "*",
    "@types/loader-utils": "*",
    "@types/node": "*",
    "@types/react": "*",
    "@types/react-dom": "*",
    "@types/react-transition-group": "*",
    "@typescript-eslint/eslint-plugin": "*",
    "@typescript-eslint/parser": "*",
    "babel-eslint": "*",
    "canvas": "*",
    "clientnode": "*",
    "css-loader": "*",
    "cssnano": "*",
    "documentation-website": "*",
    "eslint": "*",
    "eslint-config-google": "*",
    "eslint-plugin-jsdoc": "*",
    "identity-obj-proxy": "*",
    "jest": "*",
    "jsdoc": "*",
    "material-design-icons": "*",
    "mini-css-extract-plugin": "*",
    "postcss-import": "<=12",
    "postcss-loader": "*",
    "postcss-preset-env": "*",
    "prop-types": "*",
    "react": "*",
    "react-ace": "*",
    "react-dom": "*",
    "react-transition-group": "*",
    "react-useanimations": "*",
    "style-loader": "*",
    "stylelint": "*",
    "stylelint-config-standard": "*",
    "tinymce": "^5.0.0",
    "typescript-plugin-css-modules": "*",
    "web-component-wrapper": "*",
    "weboptimizer": "*",
    "webpack-dev-server": "*"
  },
  "peerDependencies": {
    "@babel/runtime": "*",
    "@rmwc/card": "*",
    "@rmwc/checkbox": "*",
    "@rmwc/circular-progress": "*",
    "@rmwc/formfield": "*",
    "@rmwc/icon-button": "*",
    "@rmwc/select": "*",
    "@rmwc/textfield": "*",
    "@rmwc/theme": "*",
    "@rmwc/tooltip": "*",
    "@rmwc/typography": "*",
    "@tinymce/tinymce-react": "*",
    "@types/react": "*",
    "@types/react-dom": "*",
    "@types/react-transition-group": "*",
    "clientnode": "*",
    "material-design-icons": "*",
    "react": "*",
    "react-ace": "*",
    "react-dom": "*",
    "react-transition-group": "*",
    "react-useanimations": "*",
    "tinymce": "^5.0.0"
  },
  "sideEffects": false,
  "webOptimizer": {
    "commandLine": {
      "test": {
        "environments": [
          "jsdom"
        ]
      }
    },
    "files": {
      "compose": {
        "cascadingStyleSheet": {
          "__evaluate__": "self.debug && 2 < self.givenCommandLineArguments.length && ['test:browser', 'serve'].includes(self.givenCommandLineArguments[2]) ? null : `${path.resolve(self.path.target.asset.cascadingStyleSheet, '[name].styles.css')}?${self.hashAlgorithm}=[chunkhash]`"
        }
      }
    },
    "generic": {
      "supportedBrowsers": [
        "IE >= 11",
        "last 2 versions",
        "> 5%"
      ]
    },
    "injection": {
      "entry": {
        "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'serve' ? ['./index.css', './playground'] : 2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'test' ? './test' : {'./components/Dummy': './components/Dummy', './components/GenericAnimate': './components/GenericAnimate', './components/GenericInput': './components/GenericInput', './components/RequireableCheckbox': './components/RequireableCheckbox', helper: './helper', index: ['./index.css', './index.tsx']}"
      },
      "ignorePattern": {
        "resourceRegExp": "jquery"
      }
    },
    "module": {
      "cascadingStyleSheet": {
        "exclude": false,
        "options": {
          "modules": {
            "localIdentName": "[local]"
          }
        }
      },
      "optimizer": {
        "babelMinify": {
          "#": "To provide a logging output we need to exclude this feature.",
          "__evaluate__": "self.debug ? {bundle: null, module: null} : {bundle: {transform: {removeConsole: false}}, module: {removeConsole: false}}"
        }
      },
      "preprocessor": {
        "javaScript": {
          "options": {
            "presets": {
              "#": "NOTE: We have to disable module export/import transformation to allow tree shaking by the final (minimizer).",
              "__evaluate__": "['@babel/preset-react', ['@babel/preset-env', {loose: true, modules: false, targets: self.targetTechnology === 'node' ? {node: 'current'} : {browsers: self.generic.supportedBrowsers, node: 'current'}}], '@babel/typescript'].concat((self.debug || !self.module.optimizer.babelMinify.module || 2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'document') ? [] : [['minify', self.module.optimizer.babelMinify.module]])"
            }
          }
        }
      }
    },
    "target:export": {
      "module": {
        "preprocessor": {
          "javaScript": {
            "options": {
              "plugins": {
                "__remove__": "@babel/plugin-transform-runtime"
              }
            }
          }
        }
      }
    },
    "target:minimal": {
      "module": {
        "replacements": {
          "normal": {
            "#": "Mock unneeded optional dependencies away.",
            "ace-builds$": "./Dummy",
            "@tinymce/tinymce-react$": "./Dummy",
            "react-ace$": "./Dummy",
            "react-useanimations$": "./Dummy",
            "react-useanimations/lib/lock$": "./Dummy",
            "react-useanimations/lib/plusToX$": "./Dummy"
          }
        }
      }
    }
  }
}
